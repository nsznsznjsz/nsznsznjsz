(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{376:function(e,a,t){e.exports=t.p+"assets/img/commitizen.04fbff99.png"},400:function(e,a,t){"use strict";t.r(a);var s=t(45),n=Object(s.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"angularjs-git-commit-message-conventions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#angularjs-git-commit-message-conventions"}},[e._v("#")]),e._v(" AngularJS Git Commit Message Conventions")]),e._v(" "),s("blockquote",[s("p",[e._v("via: "),s("a",{attrs:{href:"https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/edit#heading=h.uyo6cb12dt6w",target:"_blank",rel:"noopener noreferrer"}},[e._v("Git Commit Message Conventions"),s("OutboundLink")],1)])]),e._v(" "),s("p",[e._v("Git 中每次 commit，都需要书写 commit message：")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" commit -m "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"hello world"')]),e._v("\n")])])]),s("p",[e._v("每次使用 "),s("code",[e._v("git log")]),e._v(" 时，一份清晰的commit message 可以帮助我们快速找到所需的 commit，AngularJS Git Commit Message Conventions 就是帮助你写好它。")]),e._v(" "),s("h2",{attrs:{id:"目标"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#目标"}},[e._v("#")]),e._v(" 目标")]),e._v(" "),s("ul",[s("li",[e._v("提供更多的历史信息，方便浏览")]),e._v(" "),s("li",[e._v("允许过滤 commit 便于查找")]),e._v(" "),s("li",[e._v("可以通过脚本生成 Change log")])]),e._v(" "),s("h2",{attrs:{id:"格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#格式"}},[e._v("#")]),e._v(" 格式")]),e._v(" "),s("p",[e._v("Message 由 Header、Body（Optional）和 Footer（Optional）组成，通过空行连接：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("<type>(<scope>): <subject>\n<BLANK LINE>\n<body>\n<BLANK LINE>\n<footer>\n")])])]),s("p",[e._v("同时，每行不应超过100字符，这是避免自动换行影响美观。")]),e._v(" "),s("h3",{attrs:{id:"message-header"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#message-header"}},[e._v("#")]),e._v(" Message Header")]),e._v(" "),s("p",[e._v("Header 只有一行，由 type、scope（optional）和 subject 组成。")]),e._v(" "),s("h4",{attrs:{id:"type"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#type"}},[e._v("#")]),e._v(" type")]),e._v(" "),s("p",[e._v("规定的类型如下：")]),e._v(" "),s("ul",[s("li",[e._v("feat：新功能（feature）")]),e._v(" "),s("li",[e._v("fix：修补bug")]),e._v(" "),s("li",[e._v("docs：文档（documentation）")]),e._v(" "),s("li",[e._v("style： 格式（formatting）")]),e._v(" "),s("li",[e._v("refactor：重构")]),e._v(" "),s("li",[e._v("test：增加测试")]),e._v(" "),s("li",[e._v("chore：构建过程或辅助工具的变动，例如 deps、ci")])]),e._v(" "),s("p",[e._v("还有一种特殊情况")]),e._v(" "),s("ul",[s("li",[e._v("revert：撤销以前的 commit，后面跟着被撤销 Commit 的 Header。")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("revert: feat(pencil): add 'graphiteWidth' option\n\nThis reverts commit 667ecc1654a317a13331b17617d973392f415f02.\n")])])]),s("p",[e._v("Body部分的格式是固定的，必须写成"),s("code",[e._v("This reverts commit <hash>.")])]),e._v(" "),s("p",[e._v("如果当前 commit 与被撤销的 commit，在同一次发布（release）里面，那么它们都不会出现在 Change log 里面。如果两者在不同的发布，那么当前 commit，会出现在 Change log 的"),s("code",[e._v("Reverts")]),e._v("小标题下面。")]),e._v(" "),s("h4",{attrs:{id:"scope"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scope"}},[e._v("#")]),e._v(" scope")]),e._v(" "),s("p",[e._v("项目的范围，或是用于关联 Issue（#1)。")]),e._v(" "),s("h4",{attrs:{id:"subject"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#subject"}},[e._v("#")]),e._v(" subject")]),e._v(" "),s("p",[e._v("对于 change 的一行简短的描述")]),e._v(" "),s("ul",[s("li",[e._v("use imperative, present tense: “change” not “changed” nor “changes”")]),e._v(" "),s("li",[e._v("don't capitalize first letter")]),e._v(" "),s("li",[e._v("no dot (.) at the end")])]),e._v(" "),s("h3",{attrs:{id:"message-body"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#message-body"}},[e._v("#")]),e._v(" Message Body")]),e._v(" "),s("h3",{attrs:{id:"message-footer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#message-footer"}},[e._v("#")]),e._v(" Message Footer")]),e._v(" "),s("p",[e._v("主要用于标记破坏性更新和关闭Issue")]),e._v(" "),s("h4",{attrs:{id:"breaking-changes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#breaking-changes"}},[e._v("#")]),e._v(" BREAKING CHANGES")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("BREAKING CHANGE: isolate scope bindings definition has changed and\n    the inject option for the directive controller injection was removed.\n    \n    To migrate the code follow the example below:\n    \n    Before:\n    \n    scope: {\n      myAttr: 'attribute',\n      myBind: 'bind',\n      myExpression: 'expression',\n      myEval: 'evaluate',\n      myAccessor: 'accessor'\n    }\n    \n    After:\n    \n    scope: {\n      myAttr: '@',\n      myBind: '@',\n      myExpression: '&',\n      // myEval - usually not useful, but in cases where the expression is assignable, you can use '='\n      myAccessor: '=' // in directive's template change myAccessor() to myAccessor\n    }\n    \n    The removed `inject` wasn't generaly useful for directives so there should be no code using it.\n")])])]),s("h4",{attrs:{id:"referencing-issues"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#referencing-issues"}},[e._v("#")]),e._v(" Referencing Issues")]),e._v(" "),s("p",[e._v("关闭一个 Issue：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("Closes #234\n")])])]),s("p",[e._v("或是同时关闭多个 Issues：")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("Closes #123, #245, #992\n")])])]),s("h3",{attrs:{id:"examples"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[e._v("#")]),e._v(" Examples")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("feat($browser): onUrlChange event (popstate/hashchange/polling)\n\nAdded new event to $browser:\n- forward popstate event if available\n- forward hashchange event if popstate not available\n- do polling when neither popstate nor hashchange available\n\nBreaks $browser.onHashChange, which was removed (use onUrlChange instead)\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("fix($compile): couple of unit tests for IE9\n\nOlder IEs serialize html uppercased, but IE9 does not...\nWould be better to expect case insensitive, unfortunately jasmine does\nnot allow to user regexps for throw expectations.\n\nCloses #392\nBreaks foo.bar api, foo.baz should be used instead\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("feat(directive): ng:disabled, ng:checked, ng:multiple, ng:readonly, ng:selected\n\nNew directives for proper binding these attributes in older browsers (IE).\nAdded coresponding description, live examples and e2e tests.\n\nCloses #351\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("style($location): add couple of missing semi colons\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("docs(guide): updated fixed docs from Google Docs\n\nCouple of typos fixed:\n- indentation\n- batchLogbatchLog -> batchLog\n- start periodic checking\n- missing brace\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("feat($compile): simplify isolate scope bindings\n\nChanged the isolate scope binding options to:\n  - @attr - attribute binding (including interpolation)\n  - =model - by-directional model binding\n  - &expr - expression execution binding\n\nThis change simplifies the terminology as well as\nnumber of choices available to the developer. It\nalso supports local name aliasing from the parent.\n\nBREAKING CHANGE: isolate scope bindings definition has changed and\nthe inject option for the directive controller injection was removed.\n\nTo migrate the code follow the example below:\n\nBefore:\n\nscope: {\n  myAttr: 'attribute',\n  myBind: 'bind',\n  myExpression: 'expression',\n  myEval: 'evaluate',\n  myAccessor: 'accessor'\n}\n\nAfter:\n\nscope: {\n  myAttr: '@',\n  myBind: '@',\n  myExpression: '&',\n  // myEval - usually not useful, but in cases where the expression is assignable, you can use '='\n  myAccessor: '=' // in directive's template change myAccessor() to myAccessor\n}\n\nThe removed `inject` wasn't generaly useful for directives so there should be no code using it.\n")])])]),s("h2",{attrs:{id:"插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插件"}},[e._v("#")]),e._v(" 插件")]),e._v(" "),s("h3",{attrs:{id:"commitizen"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commitizen"}},[e._v("#")]),e._v(" Commitizen")]),e._v(" "),s("blockquote",[s("p",[e._v("via: "),s("a",{attrs:{href:"https://github.com/commitizen/cz-cli",target:"_blank",rel:"noopener noreferrer"}},[e._v("Github"),s("OutboundLink")],1)])]),e._v(" "),s("p",[e._v("Commitizen 用于帮助书写合格的 commit message，安装如下：")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" -g commitizen\n")])])]),s("p",[e._v("然后，在项目目录里，运行下面的命令，使其支持 Angular 的 Commit message 格式。")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[e._v("commitizen init cz-conventional-changelog --save --save-exact\n")])])]),s("p",[e._v("最后，将"),s("code",[e._v("git commit")]),e._v("改为使用"),s("code",[e._v("git cz")]),e._v("即可。")]),e._v(" "),s("p",[s("img",{attrs:{src:t(376),alt:"commitizen"}})]),e._v(" "),s("h3",{attrs:{id:"validate-commit-msg"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#validate-commit-msg"}},[e._v("#")]),e._v(" validate-commit-msg")]),e._v(" "),s("blockquote",[s("p",[e._v("via: "),s("a",{attrs:{href:"https://www.npmjs.com/package/validate-commit-msg",target:"_blank",rel:"noopener noreferrer"}},[e._v("npm"),s("OutboundLink")],1)])]),e._v(" "),s("p",[e._v("validate-commit-msg 用于校验 commit message 是否符合规则，安装如下：")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" --save-dev validate-commit-msg\n")])])]),s("p",[e._v("然后可以通过 git hooks 来调用，例如 husky：")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" husky --save-dev\n")])])]),s("p",[e._v("并添加 hook：")]),e._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// package.json")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"husky"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"hooks"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[e._v('"commitmsg"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"validate-commit-msg"')]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),s("h3",{attrs:{id:"conventional-changelog"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#conventional-changelog"}},[e._v("#")]),e._v(" conventional-changelog")]),e._v(" "),s("blockquote",[s("p",[e._v("via: "),s("a",{attrs:{href:"https://github.com/conventional-changelog/conventional-changelog",target:"_blank",rel:"noopener noreferrer"}},[e._v("Github"),s("OutboundLink")],1)])]),e._v(" "),s("p",[e._v("用于生成 Change log，步骤如下：")]),e._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" -g conventional-changelog\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" my-project\nconventional-changelog -p angular -i CHANGELOG.md -w\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);